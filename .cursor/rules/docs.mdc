---
description: Used to manage (initialize, update, retrieve) documents for this project
globs: 
alwaysApply: false
---
# Rules for docs

This rule is for managing **Core Files** in Markdown format stored in the project's `docs` folder.

## Documents Structure

The docs folder consists of core files, all in Markdown format. Files build upon each other in a clear hierarchy:

flowchart TD
    OV[projectbrief.md] --> FS[features.md]
    OV --> AR[architecture.md]
    FS --> AR

### Core Files (Required)

1. `projectbrief.md`
   - Foundation document that shapes all other files
   - Created at project start if it doesn't exist
   - Defines core requirements and goals
   - Source of truth for project scope

2. `features.md`
   - Provides detailed descriptions for each core functionality
   - Outlines the purpose and objectives of each feature
   - Maps corresponding code modules to each feature
   - Summarizes the implementation overview and strategy

3. `architecture.md`
   - System architecture
   - Key technical decisions
   - Design patterns in use
   - Component relationships
   - Critical implementation paths
---

## Documentation Updates

docs updates occur when:
1. Discovering new project patterns
2. After implementing significant changes
3. When user requests with **update docs** (MUST review ALL files)
4. When context needs clarification

flowchart TD
    Start[Update Process]
    
    subgraph Process
        P1[Review ALL Files]
        P2[Document Current State]
        P3[Clarify Next Steps]
        P4[Document Insights & Patterns]
        
        P1 --> P2 --> P3 --> P4
    end
    
    Start --> Process

Note: When triggered by **update docs**, I MUST review every document file, even if some don't require updates.

REMEMBER: After every memory reset, I begin completely fresh. The docs and plan are my only link to previous work. It must be maintained with precision and clarity, as my effectiveness depends entirely on its accuracy.
